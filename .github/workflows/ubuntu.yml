name: Ubuntu

on: [push, pull_request]

jobs:
  ci_test_clang_cxx20:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install_clang
      run: |
        sudo apt update
        sudo apt install clang-10 ninja-build
      shell: bash
    - name: cmake
      run: cmake -S . -B build -DJSON_CI=On
    - name: build
      run: cmake --build build --target ci_test_clang_cxx20

  ci_clang_analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install_ninja
        run: |
          sudo apt update
          sudo apt install ninja-build
        shell: bash
      - name: install_clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 11
          sudo apt-get install clang-tools-11
        shell: bash
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_clang_analyze

  ci_test_clang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install_ninja
        run: |
          sudo apt update
          sudo apt install ninja-build
        shell: bash
      - name: install_clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 11
          sudo apt-get install clang-tools-11
        shell: bash
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_test_clang

  ci_test_gcc:
    runs-on: ubuntu-latest
    container: nlohmann/json-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_test_gcc

  ci_test_valgrind:
    runs-on: ubuntu-latest
    container: nlohmann/json-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_test_valgrind

  ci_cppcheck:
    runs-on: ubuntu-latest
    container: nlohmann/json-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_cppcheck

  ci_cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_cpplint

  ci_clang_tidy:
    runs-on: ubuntu-latest
    container: nlohmann/json-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_clang_tidy

  ci_test_clang_sanitizer:
    runs-on: ubuntu-latest
    container: nlohmann/json-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: cmake --build build --target ci_test_clang_sanitizer

  ci_test_coverage:
    runs-on: ubuntu-latest
    container:
      image: nlohmann/json-ci:latest
      options: -v /__w/json/json:/workdir
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DJSON_CI=On
      - name: build
        run: |
          cmake --build build --target ci_test_coverage
          cp -vr /__w/json/json/build/html /workdir
          cp -vr /__w/json/json/build/json.info /workdir
      - name: archive coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: /__w/json/json/html
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: /__w/json/json/json.info
